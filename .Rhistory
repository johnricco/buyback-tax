calc_s_div = function(r, share_taxable, tau_div) {
#----------------------------------------------------------------------------
# Calculates after-tax return on dividends ("s", per CBO's CapTax notation,
# for dividends specifically).
#
# Parameters:
# - r             (dbl) : real rate of return on corporate equity
# - share_taxable (dbl) : share of corporate equity subject to domestic tax
# - tau_div       (dbl) : tax rate on dividends
#
# Returns: after-tax return on dividends (dbl)
#----------------------------------------------------------------------------
return(r * (1 - share_taxable * tau_div))
}
calc_s_retained = function(r, pi, share_taxable, share_death, tau_kg, n) {
#----------------------------------------------------------------------------
# Calculates after-tax return on retained earnings ("s", per CBO's CapTax
# notation, for capital gains attributable to non-payment to shareholders).
#
# Parameters:
# - r             (dbl) : real rate of return on corporate equity
# - pi            (dbl) : expected inflation rate
# - share_taxable (dbl) : share of corporate equity subject to domestic tax
# - share_death   (dbl) : share of gains held until death
# - tau_kg        (dbl) : tax rate on capital gains
# - n             (dbl) : holding period in years
#
# Returns: after-tax return on retained earnings (dbl)
#----------------------------------------------------------------------------
# Calculate sales price at end of holding period (relative to basis of $1)
price = exp((r + pi) * n)
# Calculate effective tax rate, accounting for step up and capital gains
etr = share_taxable * (1 - share_death) * tau_kg
# Calculate tax liability
tax = (price - 1) * etr
# Calculate real annualized real after-tax rate of return
return((log(price - tax) / n) - pi)
}
calc_metr('div', 0.05, 0.02, 0.04, 1, 1, 0, 8, 0.21, 0.01, 0.21, 0.21)
calc_metr = function(payout, r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg) {
#----------------------------------------------------------------------------
#  TODO
#
# Parameters:
# TODO
#
# Returns: TODO
#----------------------------------------------------------------------------
#------
# Firm
#------
# Calculate effect of corporate taxes on required rate of return
tax_gross_up = calc_tax_gross_up(payout, tau_corp, tau_bb, share_retained)
# Calculate required before-tax rate of return
rho = r * tax_gross_up
#----------
# Investor
#----------
# Calculate after-tax return on retained earnings
s_retained = calc_s_retained(r, pi, share_taxable, share_death, tau_kg, n)
# Calculate after-tax return on payout
if (payout == 'div') {
s_payout = calc_s_div(r, share_taxable, tau_div)
} else {
s_payout = s_retained
}
# Average after-tax returns
s = (s_payout * (1 - share_retained)) + (s_retained * share_retained)
#---------
# Overall
#---------
# Calculate marginal effective tax rate
metr = 1 - (s / rho)
# Return METR and key intermediate calculations
return(
c(
'rho'        = rho,
's_payout'   = s_payout,
's_retained' = s_retained,
's'          = s,
'metr'       = metr
)
)
}
calc_metr('div', 0.05, 0.02, 0.04, 1, 1, 0, 8, 0.21, 0.01, 0.21, 0.21)
calc_metr('div', 0.05, 0.02, 0.04, 1, 1, 0, 8, 0.21, 0.01, 0.21, 0.21)
calc_metr('div', 0.05, 0.02, 0.04, 0.5, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.21)
calc_metr('div', 0.05, 0.02, 0.04, 0.5, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.21)
calc_metr('bb', 0.05, 0.02, 0.04, 0.5, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.21)
calc_metr('bb', 0.05, 0.02, 0.04, 0.5, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_metr('div', 0.05, 0.02, 0.04, 0.5, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_metr('bb', 0.05, 0.02, 0.04, 0.5, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_metr('bb', 0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
0.06361079 / 0.99
1 / 0.99
0.05 * (1 / (1 - 0.21))
0.05 * (1 / (1 - 0.21)) * (1 / 0.99)
0.06329114  / .99
1 - 0.04 / 0.06
1 - 0.04 / (0.06 / (1 - tau))
tau = 0
1 - 0.04 / (0.06 / (1 - tau))
1 - 0.04 / (0.08 / (1 - tau))
1 - 0.04 / (0.08 / (1 - 0))
1 - 0.04 / (0.08 / (1 - 0.01))
1 - 0.04 / (0.06 / (1 - 0.01))
1 - 0.04 / (0.06 / (1 - 0.0))
(1 - 0.04 / (0.06 / (1 - 0.01))) / (1 - 0.04 / (0.06 / (1 - 0.0)))
(1 - 0.04 / (0.08 / (1 - 0.01))) / (1 - 0.04 / (0.08 / (1 - 0.0)))
calc_s_retained(0.05, 0.02, 1, 0, 0.21, 10)
1 - calc_s_retained(0.05, 0.02, 1, 0, 0.21, 10) / 0.05
1 - calc_s_retained(0.05, 0.02, 1, 0, 0.21, 1) / 0.05
1 - calc_s_retained(0.05, 0.02, 1, 0, 0.21, 100) / 0.05
1 - calc_s_retained(0.05, 0.02, 1, 0, 0.21, 1000) / 0.05
1 - calc_s_retained(0.05, 0.02, 1, 0, 0.21, Inf) / 0.05
1 - calc_s_retained(0.05, 0.02, 1, 0, 0.21, 1e9) / 0.05
1 - calc_s_retained(0.05, 0.02, 1, 0, 0.21, 1e6) / 0.05
1 - calc_s_retained(0.05, 0.02, 1, 0, 0.21, 1e3) / 0.05
1 - calc_s_retained(0.05, 0.02, 1, 0, 0.21, 1e4) / 0.05
1 - calc_s_retained(0.05, 0.02, 1, 0, 0.21, 1e5) / 0.05
calc_metr = function(payout, r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg) {
#----------------------------------------------------------------------------
# Calculates marginal effective tax rate on corporate investment assuming
# specified type of payout (dividends or buyback).
#
# Parameters:
# - r              (dbl) : real rate of return on corporate equity
# - pi             (dbl) : expected inflation rate
# - delta          (dbl) : economic depreciation rate
# - share_retained (dbl) : share of earnings retained for future investment
# - share_taxable  (dbl) : share of corporate equity subject to domestic tax
# - share_death    (dbl) : share of gains held until death
# - n              (dbl) : holding period for capital gains in years
# - tau_corp       (dbl) : corporate tax rate
# - tau_bb         (dbl) : buyback excise tax rate
# - tau_div        (dbl) : tax rate on dividends
# - tau_kg         (dbl) : tax rate on capital gains
#
# Returns: METR and intermediate calculations (dbl[])
#----------------------------------------------------------------------------
#------
# Firm
#------
# Calculate effect of corporate taxes on required rate of return
tax_gross_up = calc_tax_gross_up(payout, tau_corp, tau_bb, share_retained)
# Calculate required before-tax rate of return
rho = r * tax_gross_up
#----------
# Investor
#----------
# Calculate after-tax return on retained earnings
s_retained = calc_s_retained(r, pi, share_taxable, share_death, tau_kg, n)
# Calculate after-tax return on payout
if (payout == 'div') {
s_payout = calc_s_div(r, share_taxable, tau_div)
} else {
s_payout = s_retained
}
# Average after-tax returns
s = (s_payout * (1 - share_retained)) + (s_retained * share_retained)
#---------
# Overall
#---------
# Calculate marginal effective tax rate
metr = 1 - (s / rho)
# Return METR and key intermediate calculations
return(
c(
'rho'        = rho,
's_payout'   = s_payout,
's_retained' = s_retained,
's'          = s,
'metr'       = metr
)
)
}
calc_metr('bb', 0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_metr('bb', 0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)$metr
calc_metr('bb', 0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)['metr']
calc_diff = function(r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg) {
#----------------------------------------------------------------------------
# Calculates difference in METR between dividends and buybacks.
#
# Parameters:
# - r              (dbl) : real rate of return on corporate equity
# - pi             (dbl) : expected inflation rate
# - delta          (dbl) : economic depreciation rate
# - share_retained (dbl) : share of earnings retained for future investment
# - share_taxable  (dbl) : share of corporate equity subject to domestic tax
# - share_death    (dbl) : share of gains held until death
# - n              (dbl) : holding period for capital gains in years
# - tau_corp       (dbl) : corporate tax rate
# - tau_bb         (dbl) : buyback excise tax rate
# - tau_div        (dbl) : tax rate on dividends
# - tau_kg         (dbl) : tax rate on capital gains
#
# Returns: different
#----------------------------------------------------------------------------
div = calc_metr('div', pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg)
bb = calc_metr('bb', pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg)
return(div['metr'] - bb['metr'])
}
calc_diff()
calc_diff(0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_diff = function(r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg) {
#----------------------------------------------------------------------------
# Calculates difference in METR between dividends and buybacks.
#
# Parameters:
# - r              (dbl) : real rate of return on corporate equity
# - pi             (dbl) : expected inflation rate
# - delta          (dbl) : economic depreciation rate
# - share_retained (dbl) : share of earnings retained for future investment
# - share_taxable  (dbl) : share of corporate equity subject to domestic tax
# - share_death    (dbl) : share of gains held until death
# - n              (dbl) : holding period for capital gains in years
# - tau_corp       (dbl) : corporate tax rate
# - tau_bb         (dbl) : buyback excise tax rate
# - tau_div        (dbl) : tax rate on dividends
# - tau_kg         (dbl) : tax rate on capital gains
#
# Returns: different
#----------------------------------------------------------------------------
div = calc_metr('div', r pi, delta, share_retained, share_taxable,
calc_diff(0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_metr = function(payout, r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg) {
#----------------------------------------------------------------------------
# Calculates marginal effective tax rate on corporate investment assuming
# specified type of payout (dividends or buyback).
#
# Parameters:
# - payout         (str) : payout type ('div' or 'bb')
# - r              (dbl) : real rate of return on corporate equity
# - pi             (dbl) : expected inflation rate
# - delta          (dbl) : economic depreciation rate
# - share_retained (dbl) : share of earnings retained for future investment
# - share_taxable  (dbl) : share of corporate equity subject to domestic tax
# - share_death    (dbl) : share of gains held until death
# - n              (dbl) : holding period for capital gains in years
# - tau_corp       (dbl) : corporate tax rate
# - tau_bb         (dbl) : buyback excise tax rate
# - tau_div        (dbl) : tax rate on dividends
# - tau_kg         (dbl) : tax rate on capital gains
#
# Returns: METR and intermediate calculations (dbl[])
#----------------------------------------------------------------------------
#------
# Firm
#------
# Calculate effect of corporate taxes on required rate of return
tax_gross_up = calc_tax_gross_up(payout, tau_corp, tau_bb, share_retained)
# Calculate required before-tax rate of return
rho = r * tax_gross_up
#----------
# Investor
#----------
# Calculate after-tax return on retained earnings
s_retained = calc_s_retained(r, pi, share_taxable, share_death, tau_kg, n)
# Calculate after-tax return on payout
if (payout == 'div') {
s_payout = calc_s_div(r, share_taxable, tau_div)
} else {
s_payout = s_retained
}
# Average after-tax returns
s = (s_payout * (1 - share_retained)) + (s_retained * share_retained)
#---------
# Overall
#---------
# Calculate marginal effective tax rate
metr = 1 - (s / rho)
# Return METR and key intermediate calculations
return(
c(
'rho'        = rho,
's_payout'   = s_payout,
's_retained' = s_retained,
's'          = s,
'metr'       = metr
)
)
}
div = calc_metr('div', r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg)
calc_diff = function(r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg) {
#----------------------------------------------------------------------------
# Calculates difference in METR between dividends and buybacks.
#
# Parameters:
# - r              (dbl) : real rate of return on corporate equity
# - pi             (dbl) : expected inflation rate
# - delta          (dbl) : economic depreciation rate
# - share_retained (dbl) : share of earnings retained for future investment
# - share_taxable  (dbl) : share of corporate equity subject to domestic tax
# - share_death    (dbl) : share of gains held until death
# - n              (dbl) : holding period for capital gains in years
# - tau_corp       (dbl) : corporate tax rate
# - tau_bb         (dbl) : buyback excise tax rate
# - tau_div        (dbl) : tax rate on dividends
# - tau_kg         (dbl) : tax rate on capital gains
#
# Returns: different
#----------------------------------------------------------------------------
div = calc_metr('div', r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg)
bb = calc_metr('bb', r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg)
return(div['metr'] - bb['metr'])
}
calc_diff(0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_metr(0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_metr('div', 0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_metr('bb', 0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_metr('bb', 0.05, 0.02, 0.04, 0.5, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_diff(0.05, 0.02, 0.04, 0.5, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_diff(0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.23)
calc_diff(0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.1)
calc_diff(0.05, 0.02, 0.04, 1, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.21)
calc_diff(0.05, 0.02, 0.04, 0.5, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.21)
calc_diff(0.05, 0.02, 0.04, 0.9, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.21)
calc_diff = function(r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg) {
#----------------------------------------------------------------------------
# Calculates difference in METR between dividends and buybacks. Positive
# value indicates
#
# Parameters:
# - r              (dbl) : real rate of return on corporate equity
# - pi             (dbl) : expected inflation rate
# - delta          (dbl) : economic depreciation rate
# - share_retained (dbl) : share of earnings retained for future investment
# - share_taxable  (dbl) : share of corporate equity subject to domestic tax
# - share_death    (dbl) : share of gains held until death
# - n              (dbl) : holding period for capital gains in years
# - tau_corp       (dbl) : corporate tax rate
# - tau_bb         (dbl) : buyback excise tax rate
# - tau_div        (dbl) : tax rate on dividends
# - tau_kg         (dbl) : tax rate on capital gains
#
# Returns: buyback METR minus dividend METR (dbl)
#----------------------------------------------------------------------------
bb = calc_metr('bb', r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg)
div = calc_metr('div', r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg)
return(bb['metr'] - div['metr'])
}
calc_diff(0.05, 0.02, 0.04, 0.9, 0.5, 0.46, 8, 0.21, 0.01, 0.21, 0.21)
calc_diff = function(r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg) {
#----------------------------------------------------------------------------
# Calculates difference in METR between buybacks and dividends. Negative
# value indicates preference for buybacks.
#
# Parameters:
# - r              (dbl) : real rate of return on corporate equity
# - pi             (dbl) : expected inflation rate
# - delta          (dbl) : economic depreciation rate
# - share_retained (dbl) : share of earnings retained for future investment
# - share_taxable  (dbl) : share of corporate equity subject to domestic tax
# - share_death    (dbl) : share of gains held until death
# - n              (dbl) : holding period for capital gains in years
# - tau_corp       (dbl) : corporate tax rate
# - tau_bb         (dbl) : buyback excise tax rate
# - tau_div        (dbl) : tax rate on dividends
# - tau_kg         (dbl) : tax rate on capital gains
#
# Returns: buyback METR minus dividend METR (dbl)
#----------------------------------------------------------------------------
bb = calc_metr('bb', r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg)
div = calc_metr('div', r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg)
return(bb['metr'] - div['metr'])
}
calc_diff(0.06, 0.02, 0.04, 0.9, 0.4, 0.43, 10, 0.21, 0.01, 0.21, 0.21)
calc_diff(0.06, 0.02, 0.04, 0.9, 0.4, 0.43, 10, 0.21, 0.0, 0.21, 0.21)
calc_diff(0.06, 0.02, 0.04, 0.9, 0.4, 0.43, 10, 0.21, 0.02, 0.21, 0.21)
calc_diff(0.06, 0.02, 0.04, 0.9, 0.4, 0.43, 10, 0.21, 0.03, 0.21, 0.21)
calc_diff(0.06, 0.02, 0.04, 0.8, 0.4, 0.43, 10, 0.21, 0.03, 0.21, 0.21)
calc_diff(0.06, 0.02, 0.04, 0.8, 0.4, 0.43, 10, 0.21, 0.04, 0.21, 0.21)
calc_diff(0.06, 0.02, 0.04, 0.8, 0.4, 0.43, 10, 0, 0.04, 0.21, 0.21)
calc_diff(0.06, 0.02, 0.04, 0.8, 0.4, 0.43, 10, 0, 0, 0.21, 0.21)
calc_diff(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, 0, 0.21, 0.21)
calc_diff(0.05, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, 0, 0.21, 0.21)
calc_diff(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, 0, 0.21, 0.21)
rm(calc_diff)
run_sensitivity = function(r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg) {
#----------------------------------------------------------------------------
# TODO
#
# Parameters:
# - r              (dbl) : real rate of return on corporate equity
# - pi             (dbl) : expected inflation rate
# - delta          (dbl) : economic depreciation rate
# - share_retained (dbl) : share of earnings retained for future investment
# - share_taxable  (dbl) : share of corporate equity subject to domestic tax
# - share_death    (dbl) : share of gains held until death
# - n              (dbl) : holding period for capital gains in years
# - tau_corp       (dbl) : corporate tax rate
# - tau_bb         (dbl) : buyback excise tax rate
# - tau_div        (dbl) : tax rate on dividends
# - tau_kg         (dbl) : tax rate on capital gains
#
# Returns: TODO
#----------------------------------------------------------------------------
expand_grid(
r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg
) %>%
return()
}
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, 0, 0.21, 0.21)
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, 0, 0.21, c(0.21, 0.25)
)
run_sensitivity = function(r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg) {
#----------------------------------------------------------------------------
# TODO
#
# Parameters: (all can be vectors)
# - r              (dbl) : real rate of return on corporate equity
# - pi             (dbl) : expected inflation rate
# - delta          (dbl) : economic depreciation rate
# - share_retained (dbl) : share of earnings retained for future investment
# - share_taxable  (dbl) : share of corporate equity subject to domestic tax
# - share_death    (dbl) : share of gains held until death
# - n              (dbl) : holding period for capital gains in years
# - tau_corp       (dbl) : corporate tax rate
# - tau_bb         (dbl) : buyback excise tax rate
# - tau_div        (dbl) : tax rate on dividends
# - tau_kg         (dbl) : tax rate on capital gains
#
# Returns: TODO
#----------------------------------------------------------------------------
# Generate combos of parameters
expand_grid(r, pi, delta, share_retained, share_taxable, share_death, n, tau_corp, tau_bb, tau_div, tau_kg) %>%
# Calculate METRs and tax differentuak
rowwise() %>%
mutate(
metr_div  = calc_metr('div', r, pi, delta, share_retained, share_taxable, share_death, n, tau_corp, tau_bb, tau_div, tau_kg),
metr_bb   = calc_metr('bb', r, pi, delta, share_retained, share_taxable, share_death, n, tau_corp, tau_bb, tau_div, tau_kg),
metr_diff = metr_div - metr_bb
) %>%
ungroup() %>%
return()
}
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, 0, 0.21, c(0.21, 0.25))
run_sensitivity = function(r, pi, delta, share_retained, share_taxable,
share_death, n, tau_corp, tau_bb, tau_div, tau_kg) {
#----------------------------------------------------------------------------
# TODO
#
# Parameters: (all can be vectors)
# - r              (dbl) : real rate of return on corporate equity
# - pi             (dbl) : expected inflation rate
# - delta          (dbl) : economic depreciation rate
# - share_retained (dbl) : share of earnings retained for future investment
# - share_taxable  (dbl) : share of corporate equity subject to domestic tax
# - share_death    (dbl) : share of gains held until death
# - n              (dbl) : holding period for capital gains in years
# - tau_corp       (dbl) : corporate tax rate
# - tau_bb         (dbl) : buyback excise tax rate
# - tau_div        (dbl) : tax rate on dividends
# - tau_kg         (dbl) : tax rate on capital gains
#
# Returns: TODO
#----------------------------------------------------------------------------
# Generate combos of parameters
expand_grid(r, pi, delta, share_retained, share_taxable, share_death, n, tau_corp, tau_bb, tau_div, tau_kg) %>%
# Calculate METRs and tax differential
rowwise() %>%
mutate(
metr_div  = calc_metr('div', r, pi, delta, share_retained, share_taxable, share_death, n, tau_corp, tau_bb, tau_div, tau_kg)['metr'],
metr_bb   = calc_metr('bb', r, pi, delta, share_retained, share_taxable, share_death, n, tau_corp, tau_bb, tau_div, tau_kg)['metr'],
metr_diff = metr_div - metr_bb
) %>%
ungroup() %>%
return()
}
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, 0, 0.21, c(0.21, 0.25))
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, 0, 0.21)
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, 0, 0.21, 0.21)
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, 0, 0.21, 0.21)
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, 0.21, 0.21)
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0.21, 0, 0.21, 0.21)
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0.21, 0, 0.21, 0.21)
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0.21, seq(0, 0.05, 0.001), 0.21, 0.21)
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0.21, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = metr_div)
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0.21, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = metr_div) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line()
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0.21, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line()
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0.1, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line()
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line()
run_sensitivity(0.07, 0.02, 0, 0.8, 0.4, 0.43, 10, 0, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line()
run_sensitivity(0.07, 0.02, 0, 0.8, 0.4, 0.43, 10, 0.21, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line()
run_sensitivity(0.1, 0.02, 0, 0.8, 0.4, 0.43, 10, 0.21, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line()
run_sensitivity(0.2, 0.02, 0, 0.8, 0.4, 0.43, 10, 0.21, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line()
run_sensitivity(0.06, 0.02, 0, 0, 0.4, 0.43, 10, 0, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line()
run_sensitivity(0.06, 0.02, 0, 1, 0.4, 0.43, 10, 0, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line()
run_sensitivity(0.06, 0.02, 0, 1, 0.4, 0.43, seq(1, 30), 0, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line()
run_sensitivity(0.06, 0.02, 0, 1, 0.4, 0.43, c(10, 30), 0, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line()
run_sensitivity(0.06, 0.02, 0, 1, 0.4, 0.43, c(10, 30), 0, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line() + facet_wrap(~n)
run_sensitivity(0.06, 0.02, 0, 0.8, 0.4, 0.43, c(10, 30), 0, seq(0, 0.05, 0.001), 0.21, 0.21) %>% pivot_longer(cols = c(metr_div, metr_bb)) %>% ggplot(aes(x = tau_bb, y = value, colour = name)) + geom_point() + geom_line() + facet_wrap(~n)
